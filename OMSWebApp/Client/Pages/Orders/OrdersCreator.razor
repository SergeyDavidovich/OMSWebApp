@layout OrdersLayout
@page "/orders/orderscreator"

@using System.Collections.ObjectModel
@using System.ComponentModel;
@using Syncfusion.Blazor.Grids
@using OMSWebApp.Shared.Models
@using OMSWebApp.Client.Components

@inject HttpClient client

<h5>Orders Creator</h5>

<div id="grid">
    <div class="card shadow">
        <SfGrid @ref="productsGrid" DataSource="@products" Height="600" Width="auto" AllowPaging="false" AllowSelection="true" EnableAltRow="true">
            <GridSelectionSettings Type="SelectionType.Multiple" EnableToggle="true"></GridSelectionSettings>
            <GridColumns>
                <GridColumn Type="ColumnType.CheckBox" Width="50" HeaderText="#"></GridColumn>
                <GridColumn Field=@nameof(Product.ProductId) HeaderText="ID"
                            HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Center" AutoFit="false" Width="50"></GridColumn>
                <GridColumn Field=@nameof(Product.ProductName) HeaderText="PRODUCT NAME"
                            HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Left" AutoFit="false" Width="160"></GridColumn>
                <GridColumn Field=@nameof(Product.UnitPrice) HeaderText="UNIT PRICE"
                            HeaderTextAlign="TextAlign.Left" Format="N2" TextAlign="TextAlign.Right" AutoFit="false" Width="120"></GridColumn>
                <GridColumn Field=@nameof(Product.UnitsInStock) HeaderText="IN STOCK"
                            HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Center" AutoFit="false" Width="120"></GridColumn>
            </GridColumns>
            <GridEvents RowSelected="RowSelectHandler" RowDeselected="RowDeselectHandler" TValue="Product"></GridEvents>
        </SfGrid>
    </div>
    <div class="card shadow">
        <SfGrid DataSource="@selectedDetails" Height="600" Width="auto">
            <GridColumns>
                <GridColumn Field=@nameof(OrderDetail.ProductId) HeaderText="ID"
                            HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Center" AutoFit="false" Width="50"></GridColumn>
                <GridColumn Field=@nameof(OrderDetail.Quantity) HeaderText="QUANTITY"
                            HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Left" AutoFit="false" Width="160"></GridColumn>
                <GridColumn Field=@nameof(OrderDetail.UnitPrice) HeaderText="UNIT PRICE"
                            HeaderTextAlign="TextAlign.Left" Format="N2" TextAlign="TextAlign.Right" AutoFit="false" Width="120"></GridColumn>
                <GridColumn Field=@nameof(OrderDetail.Discount) HeaderText="DISCOUNT"
                            HeaderTextAlign="TextAlign.Left" TextAlign="TextAlign.Center" AutoFit="false" Width="120"></GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
    <div class="card shadow">
        <Invoice Order="new Order() { OrderId=1}"></Invoice>
    </div>
</div>

@code {

    SfGrid<Product> productsGrid;
    List<Product> products;
    List<Product> selectedProducts;

    OrderDetail detail;
    ObservableCollection<OrderDetail> selectedDetails { get; set; }


    protected override async Task OnInitializedAsync()
    {
        selectedDetails = new ObservableCollection<OrderDetail>();
        products = await client.GetFromJsonAsync<List<Product>>("api/products");
    }

    public void RowSelectHandler(RowSelectEventArgs<Product> args)
    {
        //if (args.IsHeaderCheckboxClicked) args.IsInteracted = false;
        //else
        //{
        var product = products.First<Product>(p => p.ProductId == args.Data.ProductId);

        detail = new OrderDetail()
        {
            ProductId = product.ProductId,
            Discount = 0,
            UnitPrice = product.UnitPrice.Value,
            Quantity = 1
        };
        selectedDetails.Add(detail);
        //}

    }

    public void RowDeselectHandler(RowDeselectEventArgs<Product> args)
    {
        if (productsGrid.SelectedRecords.Count == 0)
        {
            selectedDetails.Clear();
        }
        else
        {
            int selected = args.Data.ProductId;
            selectedDetails.Remove(selectedDetails.First<OrderDetail>(o => o.ProductId == selected));
        }
    }
}
<style>
    #grid {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-gap: 1vw;
    }

        #grid > div {
            padding: .5em;
            text-align: left;
        }
</style>
