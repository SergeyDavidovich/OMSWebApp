@layout OrdersLayout

@page "/orders/ordersjournal"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Charts
@using OMSWebApp.Shared.Models

@inject HttpClient client


<h5>Orders journal</h5>
<div id="grid">

<div>
            @if (orders == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <SfGrid DataSource="@orders" AllowPaging="true" AllowSelection="true" EnableAltRow="true">
                    <GridColumns>
                        <GridColumn Field=@nameof(Order.OrderId) HeaderText="ORDER ID"
                                    HeaderTextAlign="TextAlign.Center" TextAlign="TextAlign.Center" AutoFit="false" Width="100"></GridColumn>
                        <GridColumn Field=@nameof(Order.OrderDate) HeaderText="ORDER DATE"
                                    HeaderTextAlign="TextAlign.Left" Format="D" TextAlign="TextAlign.Left" AutoFit="false" Width="200"></GridColumn>
                        <GridColumn Field=@nameof(Order.CustomerId) HeaderText="CUSTOMER"
                                    HeaderTextAlign="TextAlign.Left" Format="D" TextAlign="TextAlign.Left" AutoFit="false" Width="150"></GridColumn>
                        <GridColumn Field=@nameof(Order.ShipCity) HeaderText="SHIP SITY"
                                    HeaderTextAlign="TextAlign.Left" Format="D" TextAlign="TextAlign.Left" AutoFit="false" Width="150"></GridColumn>
                        <GridColumn Field=@nameof(Order.ShipCountry) HeaderText="SHIP COUNTRY"
                                    HeaderTextAlign="TextAlign.Left" Format="D" TextAlign="TextAlign.Left" AutoFit="false" Width="150"></GridColumn>
                        <GridColumn Field=@nameof(Order.ShipAddress) HeaderText="SHIPPING ADDRESS"
                                    HeaderTextAlign="TextAlign.Left" Format="D" TextAlign="TextAlign.Left" AutoFit="true" Width="250"></GridColumn>
                    </GridColumns>
                </SfGrid>
            }
</div>
    <div>
        <p>Order ID</p>
    </div>
</div>

@code {

    //private List<Order> orders;

    //protected override async Task OnInitializedAsync()
    //{
    //    //#if DEBUG
    //    //        await Task.Delay(10000);
    //    //#endif

    //    orders = await client.GetFromJsonAsync<List<Order>>("api/orders");
    //}
}
<style>
    #grid {
        display: grid;
        grid-template-columns: 2fr 1fr;
        grid-template-rows: 1fr 1fr;
        grid-gap: 2vw;
    }

        #grid > div {
            padding: .5em;
            text-align: left;
        }
</style>

   
